# Default values for vaultwarden.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  database:
    database: &dbName ""
    username: &dbUser vaultwarden
    password: &dbPassword ""
    existingSecret: ""

replicaCount: 1

image:
  repository: vaultwarden/server@sha256
  tag: 7a0aa23c0947be3582898deb5170ea4359493ed9a76af2badf60a7eb45ac36af # 1.32.7
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

automountServiceAccountToken: false

podAnnotations: {}

podSecurityContext:
  fsGroup: 65534
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  allowPrivilegeEscalation: false
  seLinuxOptions: {}
  seccompProfile:
    type: RuntimeDefault

initContainers:
  waitForDb:
    enabled: true
    image: bitnami/mariadb@sha256:1e1fd20b91fa36c93423a861b7d644175f925203594dcce1de4888b73704e8ff # bitnami/mariadb:11.5.2-debian-12-r6
    imagePullPolicy: IfNotPresent
    resources: {}
    securityContext:
      capabilities:
        drop:
          - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 65534
      runAsGroup: 65534
      allowPrivilegeEscalation: false
      seLinuxOptions: {}
      seccompProfile:
        type: RuntimeDefault

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/server-snippet: |
      sendfile on;
      tcp_nodelay on;
      tcp_nopush on;
      location /notifications/hub {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Request-Id: $request_id";
    nginx.ingress.kubernetes.io/proxy-read-timeout: 5m
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

tls:
  existingSecret: ""
  certManager:
    enabled: false
    subject:
      organizations:
        - Vaultwarden
      organizationalUnits:
        - Vaultwarden
      countries:
        - US
    commonName: ""
    additionalDnsNames: []
    duration: 8760h
    renewBefore: 720h
    issuerRef:
      name: ""
      kind: ""
      group: cert-manager.io
    privateKey:
      rotationPolicy: Always
      algorithm: ECDSA
      size: 384

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

pvc:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  size: 1Gi
  annotations: {}
  sqlite:
    enabled: true
    storageClassName: ""
    size: 1Gi
    annotations: {}

mariadb:
  enabled: false
  auth:
    usePasswordFiles: true
    database: *dbName
    username: *dbUser
    password: *dbPassword

auth:
  admin:
    enabled: false
    token: ""
    existingSecret: ""

smtp:
  enabled: false
  host: ""
  from: ""
  fromName: "Vaultwarden"
  port: 587
  security: starttls
  username: ""
  password: ""
  authMechanism: ""
  existingSecret: ""

domain: ""

livenessProbeOverride: {}
readinessProbeOverride: {}
